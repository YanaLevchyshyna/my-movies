{"version":3,"file":"static/js/387.906f5e31.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/fetchApi.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { IoPersonCircleOutline } from 'react-icons/io5';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const ReviewItem = styled.li`\n  display: block;\n  padding: 20px;\n  border-radius: 8px;\n  border: 1px solid rgba(227, 227, 227, 1);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nexport const ReviewImgAuthorWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const ReviewerImg = styled(IoPersonCircleOutline)`\n  margin-right: 15px;\n  width: 30px;\n  height: 30px;\n  stroke: grey;\n`;\n\nexport const ReviewAuthor = styled.p`\n  font-weight: 700;\n`;\n\nexport const ReviewContent = styled.p`\n  font-family: 'Source Sans Pro', Arial, sans-serif;\n`;\n\nexport const NoReviews = styled.p`\n  text-align: center;\n  padding: 34px 10px;\n  color: #ffffff;\n  background-image: radial-gradient(\n    circle at center,\n    rgb(32, 32, 32) calc(50vw - 510px),\n    rgba(32, 32, 32, 0.84) 50%,\n    rgba(32, 32, 32, 0.84) 100%\n  );\n  font-size: 20px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport getApi from 'services/fetchApi';\nimport Loader from 'components/Loader/Loader';\nimport {\n  ReviewerImg,\n  ReviewsList,\n  ReviewItem,\n  ReviewImgAuthorWrapper,\n  ReviewAuthor,\n  ReviewContent,\n  NoReviews,\n} from './Reviews.styled';\n\nconst movieIdApi = getApi();\n\nexport default function Reviews() {\n  const { t, i18n } = useTranslation();\n  const currentLanguage = i18n.language;\n\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchDataMovieReviews = async () => {\n      try {\n        const { results } = await movieIdApi.fetchMovieReviews(\n          id,\n          currentLanguage\n        );\n        setReviews(results);\n\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDataMovieReviews();\n  }, [id, currentLanguage]);\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      {reviews && reviews.length > 0 ? (\n        <section>\n          <div>\n            <ReviewsList>\n              {reviews.map(review => (\n                <ReviewItem key={review.id}>\n                  <ReviewImgAuthorWrapper>\n                    <ReviewerImg />\n                    <ReviewAuthor>{review.author}</ReviewAuthor>\n                  </ReviewImgAuthorWrapper>\n                  <ReviewContent>{review.content}</ReviewContent>\n                </ReviewItem>\n              ))}\n            </ReviewsList>\n          </div>\n        </section>\n      ) : (\n        <NoReviews>{t('movieDetails.noReviews')}</NoReviews>\n      )}\n    </>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMTMxNTJlM2MxOWQ1YzU3NjQyMzVjZmFhMmU0MjJmMSIsInN1YiI6IjY0ZTU4ZTdhMWZlYWMxMDBhYjhlNTA4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k6MLKJDkEcuLx4u4b6W5X0t6JAySBDO73jvRSeD_w2g',\n  },\n};\n\nasync function fetchPopularMovies(lng, page) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?language=${lng}&page=${page}`,\n      options\n    );\n    // console.log('response fetch', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('data POPULAR', data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchTrendingMovies(lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?language=${lng}`,\n      options\n    );\n    // console.log('response fetch', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('data trending', data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchMovieId(movieId, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=${lng}`,\n      options\n    );\n    // console.log('response fetchID', response);\n\n    const data = await response.json();\n    // console.log('data ID == ID', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nasync function fetchMovieActors(movieId, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=${lng}`,\n      options\n    );\n    // console.log('response fetchActor', response);\n\n    const data = await response.json();\n    // console.log('data ACTORS ACTORS', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchMovieReviews(movieId, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=${lng}`,\n      options\n    );\n    // console.log('reviews', response);\n\n    const data = await response.json();\n    // console.log('data reviews', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n\nasync function fetchSearchMovie(query, lng) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=${lng}&page=1`,\n      options\n    );\n    // console.log('SEARCH QUERY', response);\n\n    if (!response.ok) {\n      return Promise.reject(new Error(`Sorry, something went wrong...`));\n    }\n\n    const data = await response.json();\n    // console.log('SEARCH QUERY', data);\n    return data;\n  } catch (error) {\n    console.error('ERROR', error);\n  }\n}\n\nasync function fetchMovieVideos(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/videos`,\n      options\n    );\n    // console.log('reviews', response);\n\n    const data = await response.json();\n    // console.log('data videos 111', data);\n    return data;\n  } catch (error) {\n    console.log('ERROR', error);\n  }\n}\n// fetchMovieVideos('634492', 'en-US');\n\nconst getApi = () => {\n  return {\n    fetchTrendingMovies,\n    fetchMovieId,\n    fetchMovieActors,\n    fetchMovieReviews,\n    fetchSearchMovie,\n    fetchPopularMovies,\n    fetchMovieVideos,\n  };\n};\n\nexport default getApi;\n"],"names":["ReviewsList","styled","ReviewItem","ReviewImgAuthorWrapper","ReviewerImg","IoPersonCircleOutline","ReviewAuthor","ReviewContent","NoReviews","movieIdApi","getApi","Reviews","useTranslation","t","currentLanguage","i18n","language","useState","reviews","setReviews","loading","setLoading","id","useParams","useEffect","fetchDataMovieReviews","fetchMovieReviews","results","console","error","Loader","length","map","review","author","content","options","method","headers","accept","Authorization","fetchPopularMovies","lng","page","fetch","response","ok","Promise","reject","Error","json","data","fetchTrendingMovies","fetchMovieId","movieId","fetchMovieActors","log","fetchSearchMovie","query","fetchMovieVideos"],"sourceRoot":""}